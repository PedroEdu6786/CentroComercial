package View;

import Excepciones.ArticuloNoEncontradoException;
import Excepciones.ListaArticulosVaciaException;
import Excepciones.ListaPaquetesVaciaException;
import Excepciones.PaqueteNoEncontradoException;
import Model.CarritoCompras.CarritoCompras;
import Model.CentroComercial.CentroComercial;
import Model.Cliente.Cliente;
import Patrones.Decorator.Articulo;
import Patrones.Decorator.Paquete;
import Patrones.Iterator.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author VICTOR
 */
public class CarritoComprasView extends javax.swing.JFrame {

    private Cliente cliente;
    private CentroComercialView centroComercialView;

    /**
     * Creates new form MenuPrincipal
     */
    public CarritoComprasView(Cliente cliente, CentroComercialView centroComercialView) {
        this.cliente = cliente;
        this.centroComercialView = centroComercialView;

        initComponents();
        this.setLocationRelativeTo(null);

        //Inicialización de los elementos de la vista.
        eliminarArticuloButton.setEnabled(false);
        eliminarPaqueteButton.setEnabled(false);

        mostrarCantidadProductos();
        mostrarTotalAPagar();
        mostrarArticulos();
        mostrarPaquetes();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        articulosTable = new javax.swing.JTable();
        eliminarPaqueteButton = new javax.swing.JButton();
        contenidoLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        paquetesTable = new javax.swing.JTable();
        eliminarArticuloButton = new javax.swing.JButton();
        resumenPedidoLabel = new javax.swing.JLabel();
        cantidadArticulosLabel = new javax.swing.JLabel();
        totalAPagarLabel = new javax.swing.JLabel();
        regresarButton = new javax.swing.JButton();
        realizarPagoButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(252, 86, 50));

        articulosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Articulo", "Tienda", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        articulosTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                articulosTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(articulosTable);

        eliminarPaqueteButton.setText("Eliminar de carrito");
        eliminarPaqueteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPaqueteButtonActionPerformed(evt);
            }
        });

        contenidoLabel.setBackground(new java.awt.Color(252, 86, 50));
        contenidoLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        contenidoLabel.setText("Contenido");

        paquetesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Paquete", "Tienda", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        paquetesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paquetesTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(paquetesTable);

        eliminarArticuloButton.setText("Eliminar de carrito");
        eliminarArticuloButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarArticuloButtonActionPerformed(evt);
            }
        });

        resumenPedidoLabel.setBackground(new java.awt.Color(252, 86, 50));
        resumenPedidoLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        resumenPedidoLabel.setText("Resumen del pedido");

        cantidadArticulosLabel.setBackground(new java.awt.Color(252, 86, 50));
        cantidadArticulosLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        cantidadArticulosLabel.setText("Cantidad de artículos:");

        totalAPagarLabel.setBackground(new java.awt.Color(252, 86, 50));
        totalAPagarLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        totalAPagarLabel.setText("Total a pagar: $");

        regresarButton.setText("Regresar");
        regresarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarButtonActionPerformed(evt);
            }
        });

        realizarPagoButton.setText("Realizar pago");
        realizarPagoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                realizarPagoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(eliminarPaqueteButton)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(contenidoLabel)
                                .addComponent(resumenPedidoLabel)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(regresarButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(realizarPagoButton)))
                            .addComponent(eliminarArticuloButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalAPagarLabel)
                            .addComponent(cantidadArticulosLabel))))
                .addGap(0, 19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contenidoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eliminarArticuloButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eliminarPaqueteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resumenPedidoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cantidadArticulosLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(totalAPagarLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regresarButton)
                    .addComponent(realizarPagoButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        jLabel3.setBackground(new java.awt.Color(252, 86, 50));
        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jLabel3.setText("Carrito de Compras");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(217, 217, 217))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 670, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eliminarPaqueteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPaqueteButtonActionPerformed
        Iterator paquetesIterator = cliente.getCarritoCompras().getPaquetesIterator();

        int counter = 0;
        while (paquetesIterator.hasNext() && counter <= paqueteSeleccionadoIndex) {
            Paquete paquete = (Paquete) paquetesIterator.next();
            if (counter == paqueteSeleccionadoIndex) {
                try {
                    cliente.getCarritoCompras().removePaquete(paquete);
                } catch (ListaPaquetesVaciaException | PaqueteNoEncontradoException ex) {
                    JOptionPane.showMessageDialog(null, "El carrito está vacío o el paquete no se encuentra en él.", "ATENCIÓN", JOptionPane.INFORMATION_MESSAGE);
                }
                break;
            }
            counter++;
        }
        
        mostrarCantidadProductos();
        mostrarTotalAPagar();
        mostrarArticulos();
        mostrarPaquetes();
        eliminarPaqueteButton.setEnabled(false);
        paqueteSeleccionadoIndex = -1;
    }//GEN-LAST:event_eliminarPaqueteButtonActionPerformed

    private void articulosTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_articulosTableMouseClicked
        articuloSeleccionadoIndex = articulosTable.getSelectedRow();
        eliminarArticuloButton.setEnabled(true);
    }//GEN-LAST:event_articulosTableMouseClicked

    private void paquetesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paquetesTableMouseClicked
        paqueteSeleccionadoIndex = paquetesTable.getSelectedRow();
        eliminarPaqueteButton.setEnabled(true);
    }//GEN-LAST:event_paquetesTableMouseClicked

    private void eliminarArticuloButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarArticuloButtonActionPerformed
        Iterator articulosIterator = cliente.getCarritoCompras().getArticulosIterator();

        int counter = 0;
        while (articulosIterator.hasNext() && counter <= articuloSeleccionadoIndex) {
            Articulo articulo = (Articulo) articulosIterator.next();
            if (counter == articuloSeleccionadoIndex) {
                try {
                    cliente.getCarritoCompras().removeArticulo(articulo);
                } catch (ListaArticulosVaciaException | ArticuloNoEncontradoException ex) {
                    JOptionPane.showMessageDialog(null, "El carrito está vacío o el artículo no se encuentra en él.", "ATENCIÓN", JOptionPane.INFORMATION_MESSAGE);
                }
                break;
            }
            counter++;
        }

        mostrarCantidadProductos();
        mostrarTotalAPagar();
        mostrarArticulos();
        eliminarArticuloButton.setEnabled(false);
        articuloSeleccionadoIndex = -1;
    }//GEN-LAST:event_eliminarArticuloButtonActionPerformed

    private void regresarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarButtonActionPerformed
        dispose();
        centroComercialView.setVisible(true);
    }//GEN-LAST:event_regresarButtonActionPerformed

    private void realizarPagoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_realizarPagoButtonActionPerformed
        centroComercialView.getCentroComercial().pagar(cliente);
        centroComercialView.mostrarNotificaciones();
        JOptionPane.showMessageDialog(null, "*Compra realizada.", "ATENCIÓN", JOptionPane.INFORMATION_MESSAGE);
        dispose();
        centroComercialView.solicitarCarritoComprasButton.setEnabled(true);
        centroComercialView.pagarCarritoComprasButton.setEnabled(false);
        centroComercialView.eliminarCarritoComprasButton.setEnabled(false);
        centroComercialView.ingresarTiendaButton.setEnabled(false);
        centroComercialView.setVisible(true);
    }//GEN-LAST:event_realizarPagoButtonActionPerformed

    public void mostrarCantidadProductos() {
        int cantidadProductos = cliente.getCarritoCompras().getArticulos().size() + cliente.getCarritoCompras().getPaquetes().size();
        cantidadArticulosLabel.setText("Cantidad de productos: " + cantidadProductos);
        if (cantidadProductos > 0) {
            realizarPagoButton.setEnabled(true);
        } else {
            realizarPagoButton.setEnabled(false);
        }
    }
    
    public void mostrarTotalAPagar() {
        double totalAPagar = 0;
        Iterator iterator = cliente.getCarritoCompras().getArticulosIterator();

        while (iterator.hasNext()) {
            Articulo articulo = (Articulo) iterator.next();
            totalAPagar += articulo.getPrecio();
        }
        
        iterator = cliente.getCarritoCompras().getPaquetesIterator();
        while (iterator.hasNext()) {
            Paquete paquete = (Paquete) iterator.next();
            totalAPagar += paquete.getPrecio();
        }
        
        totalAPagarLabel.setText("Total a pagar: $" + String.format("%.2f", totalAPagar));
    }
    
    public void mostrarArticulos() {
        String tabla[][] = new String[cliente.getCarritoCompras().getArticulos().size()][3];

        Iterator articulosIterator = cliente.getCarritoCompras().getArticulosIterator();
        int i = 0;
        while (articulosIterator.hasNext()) {
            Articulo articulo = (Articulo) articulosIterator.next();
            tabla[i][0] = articulo.getNombre();
            tabla[i][1] = articulo.getIdentificadorTienda();
            tabla[i][2] = "$" + String.format("%.2f", articulo.getPrecio());
            i++;
        }
        
        articulosTable.setModel(new javax.swing.table.DefaultTableModel(
                tabla,
                new String[]{
                    "Articulo", "Tienda", "Precio"}
        ));
    }

    public void mostrarPaquetes() {
        String tabla[][] = new String[cliente.getCarritoCompras().getPaquetes().size()][3];

        Iterator paquetesIterator = cliente.getCarritoCompras().getPaquetesIterator();
        int i = 0;
        while (paquetesIterator.hasNext()) {
            Paquete paquete = (Paquete) paquetesIterator.next();
            tabla[i][0] = paquete.getNombre();
            tabla[i][1] = paquete.getIdentificadorTienda();
            tabla[i][2] = "$" + String.format("%.2f", paquete.getPrecio());
            i++;
        }

        paquetesTable.setModel(new javax.swing.table.DefaultTableModel(
                tabla,
                new String[]{
                    "Paquete", "Tienda", "Precio"}
        ));
    }

    private int articuloSeleccionadoIndex = -1;
    private int paqueteSeleccionadoIndex = -1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable articulosTable;
    public javax.swing.JLabel cantidadArticulosLabel;
    public javax.swing.JLabel contenidoLabel;
    public javax.swing.JButton eliminarArticuloButton;
    public javax.swing.JButton eliminarPaqueteButton;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable paquetesTable;
    public javax.swing.JButton realizarPagoButton;
    public javax.swing.JButton regresarButton;
    public javax.swing.JLabel resumenPedidoLabel;
    public javax.swing.JLabel totalAPagarLabel;
    // End of variables declaration//GEN-END:variables
}
